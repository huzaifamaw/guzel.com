# Generated by Django 2.2 on 2022-12-12 02:15

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TbCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('provinces', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'tb_city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbCustomer',
            fields=[
                ('customer_id', models.AutoField(db_column='Customer_ID', primary_key=True, serialize=False)),
                ('customer_email', models.CharField(blank=True, db_column='Customer_Email', max_length=100, null=True)),
                ('customer_password', models.CharField(blank=True, db_column='Customer_Password', max_length=50, null=True)),
                ('customer_firstname', models.CharField(blank=True, db_column='Customer_FirstName', max_length=100, null=True)),
                ('customer_lastname', models.CharField(blank=True, db_column='Customer_LastName', max_length=100, null=True)),
                ('customer_contactnumber', models.CharField(blank=True, db_column='Customer_ContactNumber', max_length=100, null=True)),
                ('customer_dob', models.DateField(blank=True, db_column='Customer_DOB', null=True)),
                ('customer_shippingaddress', models.CharField(blank=True, db_column='Customer_ShippingAddress', max_length=100, null=True)),
                ('customer_city', models.CharField(blank=True, db_column='Customer_City', max_length=100, null=True)),
                ('customer_country', models.CharField(blank=True, db_column='Customer_Country', max_length=100, null=True)),
                ('customer_status', models.IntegerField(blank=True, db_column='Customer_Status', null=True)),
            ],
            options={
                'db_table': 'tb_customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbEmployees',
            fields=[
                ('employee_id', models.AutoField(db_column='Employee_ID', primary_key=True, serialize=False)),
                ('employee_firstname', models.CharField(blank=True, db_column='Employee_FirstName', max_length=100, null=True)),
                ('employee_lastname', models.CharField(blank=True, db_column='Employee_LastName', max_length=100, null=True)),
                ('employee_title', models.CharField(blank=True, db_column='Employee_Title', max_length=100, null=True)),
                ('employee_gender', models.CharField(blank=True, db_column='Employee_Gender', max_length=25, null=True)),
                ('employee_dob', models.DateField(blank=True, db_column='Employee_DOB', null=True)),
                ('employee_hiredate', models.DateField(blank=True, db_column='Employee_HireDate', null=True)),
                ('employee_dept', models.CharField(blank=True, db_column='Employee_Dept', max_length=25, null=True)),
                ('employee_status', models.IntegerField(blank=True, db_column='Employee_Status', null=True)),
            ],
            options={
                'db_table': 'tb_employees',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbGuzeladmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
                ('role', models.CharField(db_column='Role', max_length=15)),
            ],
            options={
                'db_table': 'tb_guzeladmin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbOrder',
            fields=[
                ('order_id', models.AutoField(db_column='Order_ID', primary_key=True, serialize=False)),
                ('order_trackingid', models.CharField(db_column='Order_TrackingID', max_length=100)),
                ('order_customerid', models.CharField(blank=True, db_column='Order_CustomerID', max_length=100, null=True)),
                ('order_customeremail', models.CharField(blank=True, db_column='Order_CustomerEmail', max_length=50, null=True)),
                ('order_productid', models.CharField(blank=True, db_column='Order_ProductID', max_length=100, null=True)),
                ('order_productname', models.CharField(blank=True, db_column='Order_ProductName', max_length=100, null=True)),
                ('order_productsku', models.CharField(blank=True, db_column='Order_ProductSKU', max_length=100, null=True)),
                ('order_productprice', models.CharField(blank=True, db_column='Order_ProductPrice', max_length=100, null=True)),
                ('order_productqty', models.CharField(blank=True, db_column='Order_ProductQty', max_length=100, null=True)),
                ('order_productsubtotal', models.CharField(blank=True, db_column='Order_ProductSubTotal', max_length=100, null=True)),
                ('order_date', models.DateField(db_column='Order_Date')),
                ('order_isshipped', models.IntegerField(db_column='Order_isShipped')),
                ('order_map_lat', models.CharField(blank=True, db_column='Order_Map_Lat', max_length=45, null=True)),
                ('order_map_lon', models.CharField(blank=True, db_column='Order_Map_Lon', max_length=45, null=True)),
            ],
            options={
                'db_table': 'tb_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbProduct',
            fields=[
                ('product_id', models.AutoField(db_column='Product_ID', primary_key=True, serialize=False)),
                ('product_category_id', models.IntegerField(blank=True, db_column='Product_Category_ID', null=True)),
                ('product_name', models.CharField(blank=True, db_column='Product_Name', max_length=25, null=True)),
                ('product_description', models.CharField(blank=True, db_column='Product_Description', max_length=100, null=True)),
                ('product_sku', models.CharField(blank=True, db_column='Product_SKU', max_length=25, null=True)),
                ('product_price', models.CharField(blank=True, db_column='Product_Price', max_length=100, null=True)),
                ('product_qty_instock', models.IntegerField(blank=True, db_column='Product_Qty_InStock', null=True)),
                ('product_image', models.CharField(blank=True, db_column='Product_Image', max_length=100, null=True)),
                ('productsupplier_id', models.CharField(blank=True, db_column='ProductSupplier_ID', max_length=25, null=True)),
                ('product_creationdate', models.DateField(blank=True, db_column='Product_CreationDate', null=True)),
                ('ispopular', models.IntegerField(blank=True, db_column='isPopular', null=True)),
                ('isnewstock', models.IntegerField(blank=True, db_column='isNewStock', null=True)),
                ('issale', models.IntegerField(blank=True, db_column='isSale', null=True)),
                ('product_status', models.IntegerField(blank=True, db_column='Product_Status', null=True)),
            ],
            options={
                'db_table': 'tb_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbProductCategory',
            fields=[
                ('product_category_id', models.AutoField(db_column='Product_Category_ID', primary_key=True, serialize=False)),
                ('product_category_name', models.CharField(blank=True, db_column='Product_Category_Name', max_length=25, null=True)),
                ('product_category_status', models.IntegerField(blank=True, db_column='Product_Category_Status', null=True)),
            ],
            options={
                'db_table': 'tb_product_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbSupplier',
            fields=[
                ('supplier_id', models.AutoField(db_column='Supplier_ID', primary_key=True, serialize=False)),
                ('supplier_name', models.CharField(blank=True, db_column='Supplier_Name', max_length=100, null=True)),
                ('supplier_businessname', models.CharField(blank=True, db_column='Supplier_BusinessName', max_length=100, null=True)),
                ('supplier_contactnumber', models.CharField(blank=True, db_column='Supplier_ContactNumber', max_length=100, null=True)),
                ('supplier_approvaldate', models.DateField(blank=True, db_column='Supplier_ApprovalDate', null=True)),
                ('supplier_city', models.CharField(blank=True, db_column='Supplier_City', max_length=100, null=True)),
                ('supplier_country', models.CharField(blank=True, db_column='Supplier_Country', max_length=100, null=True)),
                ('suppliertype_id', models.IntegerField(blank=True, db_column='SupplierType_ID', null=True)),
                ('supplier_status', models.IntegerField(blank=True, db_column='Supplier_Status', null=True)),
            ],
            options={
                'db_table': 'tb_supplier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbSuppliertype',
            fields=[
                ('suppliertype_id', models.AutoField(db_column='SupplierType_ID', primary_key=True, serialize=False)),
                ('suppliertype', models.CharField(blank=True, db_column='SupplierType', max_length=100, null=True)),
                ('suppliertype_desc', models.CharField(blank=True, db_column='SupplierType_Desc', max_length=100, null=True)),
            ],
            options={
                'db_table': 'tb_suppliertype',
                'managed': False,
            },
        ),
    ]
